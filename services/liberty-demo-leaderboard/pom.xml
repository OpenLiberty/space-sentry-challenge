<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Add the rest of the POM below here. -->
	<groupId>liberty.demo</groupId>
	<artifactId>liberty-demo-leaderboard</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>

	<properties>
	    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	    <maven.compiler.source>1.8</maven.compiler.source>
	    <maven.compiler.target>1.8</maven.compiler.target>
	    <app.name>${project.artifactId}</app.name>
	    <testServerHttpPort>9082</testServerHttpPort>
	    <testServerHttpsPort>9447</testServerHttpsPort>
	    <warContext>${app.name}</warContext>
	    <package.file>${project.build.directory}/${app.name}.zip</package.file>
	    <packaging.type>usr</packaging.type>
	</properties>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
            <version>3.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.jaxrs20</artifactId>
            <version>1.0.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>
      	<dependency>
		      <groupId>org.mongodb</groupId>
		      <artifactId>mongo-java-driver</artifactId>
		      <version>3.4.3</version>
		    </dependency>
        <dependency>
            <groupId>com.ibm.websphere.appserver.api</groupId>
            <artifactId>com.ibm.websphere.appserver.api.json</artifactId>
            <version>1.0.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
            <scope>provided</scope>
        </dependency>
        <!-- tag::config[] -->
        <dependency>
          <groupId>org.eclipse.microprofile.config</groupId>
          <artifactId>microprofile-config-api</artifactId>
          <version>1.2</version>
          <scope>provided</scope>
        </dependency>
        <!-- end::config[] -->
        <dependency>
          <groupId>org.eclipse.microprofile.health</groupId>
          <artifactId>microprofile-health-api</artifactId>
          <version>1.0</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>javax.ws.rs</groupId>
          <artifactId>javax.ws.rs-api</artifactId>
          <version>2.1</version>
          <scope>provided</scope>
        </dependency>
        <!-- tag::dependencies_test[] -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
        	<groupId>io.openliberty.features</groupId>
        	<artifactId>jsonb-1.0</artifactId>
        	<version>RELEASE</version>
        	<type>esa</type>
        </dependency>
        <dependency>
		    <groupId>org.eclipse.microprofile.metrics</groupId>
		    <artifactId>microprofile-metrics-api</artifactId>
		    <version>1.1</version>
		</dependency>        
		<dependency>
		    <groupId>org.eclipse.microprofile.openapi</groupId>
		    <artifactId>microprofile-openapi-api</artifactId>
		    <version>2.0-MR1</version>
		    <scope>provided</scope>
		</dependency>
		<dependency>
		    <groupId>org.eclipse.microprofile.fault-tolerance</groupId>
		    <artifactId>microprofile-fault-tolerance-api</artifactId>
		    <version>2.0</version>
		</dependency>
    </dependencies>

	<build>
	    <plugins>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-war-plugin</artifactId>
	            <version>3.1.0</version>
	            <configuration>
	            	<failOnMissingWebXml>false</failOnMissingWebXml>
	                <packagingExcludes>pom.xml</packagingExcludes>
	            </configuration>
	        </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <id>default-test</id>
                        <configuration>
                            <excludes>
                                <exclude>**/it/**</exclude>
                            </excludes>
                            <reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
	        <plugin>
	            <groupId>net.wasdev.wlp.maven.plugins</groupId>
	            <artifactId>liberty-maven-plugin</artifactId>
	            <version>2.3</version>
	            <configuration>
		          <assemblyArtifact>
		            <groupId>io.openliberty</groupId>
		            <artifactId>openliberty-runtime</artifactId>
		            <version>RELEASE</version>
		            <type>zip</type>
		          </assemblyArtifact>
                  	<!--installDirectory>/Users/frankji/Documents/wlp</installDirectory-->
	                <serverName>${project.artifactId}Server</serverName>
	                <stripVersion>true</stripVersion>
	                <configFile>src/main/liberty/config/server.xml</configFile>
	                <jvmOptionsFile>src/main/liberty/config/resources/jvm.options</jvmOptionsFile>
	                <packageFile>${package.file}</packageFile>
	                <include>${packaging.type}</include>
	                <bootstrapProperties>
	                    <default.http.port>${testServerHttpPort}</default.http.port>
	                    <default.https.port>${testServerHttpsPort}</default.https.port>
	                    <app.context.root>${warContext}</app.context.root>
	                </bootstrapProperties>
	            </configuration>
	            <executions>
	                <execution>
                        <id>install-liberty</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>install-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install-app</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>install-apps</goal>
                        </goals>
                        <configuration>
                            <looseApplication>true</looseApplication>
                            <stripVersion>true</stripVersion>
                            <installAppPackages>project</installAppPackages>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-server</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>test-start-server</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-server</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>test-stop-server</goal>
                        </goals>
                    </execution>
                    <execution>
	                    <id>package-app</id>
	                    <phase>package</phase>
	                    <goals>
	                        <goal>package-server</goal>
	                    </goals>
	                    <configuration>
	                        <outputDirectory>target/wlp-package</outputDirectory>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
            <!-- Plugin to run functional tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/it/**</include>
                            </includes>
                            <systemPropertyVariables>
                                <liberty.test.port>${testServerHttpPort}</liberty.test.port>
                                <war.name>${warContext}</war.name>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify-results</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
                    <reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
                </configuration>
            </plugin>
	    </plugins>
	</build>
    
</project>
